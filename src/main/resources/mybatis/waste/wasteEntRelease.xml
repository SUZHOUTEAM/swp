<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mlsc.yifeiwang.wasterealase.mapper.EntReleaseMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.mlsc.yifeiwang.wasterealase.entity.EntRelease">
        <id column="id" property="id" />
        <result column="entId" property="entId" />
        <result column="facilitatorEntId" property="facilitatorEntId" />
        <result column="remark" property="remark" />
        <result column="releaseCount" property="releaseCount" />
        <result column="totalAmountDesc" property="totalAmountDesc" />
        <result column="totalAmount" property="totalAmount" />
        <result column="releaseType" property="releaseType" />
        <result column="busiStatus" property="busiStatus" />
        <result column="createBy" property="createBy" />
        <result column="createTime" property="createTime" />
        <result column="editBy" property="editBy" />
        <result column="editTime" property="editTime" />
        <result column="deleteFlag" property="deleteFlag" />
        <result column="activityId" property="activityId"/>
    </resultMap>
    <sql id="wasteEntReleaseWhereCondition">
        <if test='favorited == true'>
            and entFavor.id is not null and entRelease.deleteFlag in (0,1)
        </if>
        <if test='amountInterval != 0.0 and amountIntervalList == null'>
            and entRelease.totalAmount &gt;= #{amountInterval}
        </if>
        <if test='amountInterval == 0.0 and amountIntervalList != null'>
            and (
            <foreach collection="amountIntervalList" item="amountItem" separator="or">
                (entRelease.totalAmount BETWEEN #{amountItem.startAmount} and #{amountItem.endAmount})
            </foreach>
            )
        </if>
        <if test='amountInterval != 0.0 and amountIntervalList != null'>
            and ( entRelease.totalAmount &gt;= #{amountInterval}
            <foreach collection="amountIntervalList" item="amountItem" separator="or">
                or (entRelease.totalAmount BETWEEN #{amountItem.startAmount} and #{amountItem.endAmount})
            </foreach>
            )
        </if>
        <if test='amountInterval != 0.0 and amountIntervalList != null'>
            and ( entRelease.totalAmount &gt;= #{amountInterval}
            <foreach collection="amountIntervalList" item="amountItem" separator="or">
                or  (entRelease.totalAmount BETWEEN #{amountItem.startAmount} and #{amountItem.endAmount})
            </foreach>
            )
        </if>
        <if test='cantonCodeList != null'>
            and (
            <foreach collection="cantonCodeList" item="cantonCodeItem" separator="or">
                entBase.CantonCode LIKE  concat(#{cantonCodeItem},'%')
            </foreach>
            )
        </if>
        <if test='wasteCodeList !=null'>
            AND exists (
            select *
            from ent_release_detail releaseDetail inner join ent_waste  entWaste on releaseDetail.entWasteId = entWaste.id where
            (
            <foreach collection="wasteCodeList" item="wasteCodeItem" separator="or">
                wasteCode LIKE  concat('%',#{wasteCodeItem})
            </foreach>
            )
            and releaseDetail.releaseId = entRelease.id
            )
        </if>
        <if test='binding!=null'>
            <choose>
                <when test=" binding == true ">
                    and entBind.id is not null and entRelease.deleteFlag in (0,1)
                </when>
                <when test=" binding == false ">
                    and entBind.id is null and entRelease.deleteFlag = 0
                </when>
            </choose>
        </if>
        <if test='favorited == false and binding == null'>
            and entRelease.deleteFlag = 0
        </if>


    </sql>

    <select id="listWasteEntRelease"
            resultType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseModel"
            parameterType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseParam">

        SELECT *
        FROM
        (
        SELECT
        entRelease.id AS releaseId,
        entRelease.facilitatorEntId as facilitatorEntId,
        entBase.entId as releaseEntId,
        case when entBind.id is not null then true
        else FALSE
        END AS entBindStatus,
        case when entBind.id is null then CONCAT(left(entBase.entName,1) ,lpad('',CHAR_LENGTH(entBase.entName)-2, '＊'),right(entBase.entName,1))
        else  entBase.entName
        END AS entName,
        case when entBind.id is null then
            case when (provinceCantonCode.CantonCode = cantonCode.CantonCode) then CONCAT(provinceCantonCode.CantonName ,'＊＊＊')
            else concat(provinceCantonCode.CantonName,cantonCode.CantonName,'＊＊＊'	)
            end
        else  entBase.entAddress
        END AS entAddress,
        entRelease.remark AS releaseRemark,
        count(releaseDetail.id) AS totalWasteCount,
        entRelease.totalAmountDesc as totalWasteAmountDesc,
        entRelease.totalAmount as totalWasteAmount,
        entRelease.createTime AS releaseDate,
        entRelease.busiStatus as releaseStatus,
        entRelease.deleteFlag,
        case when inquiry.id is not null then 1 else 0 end as inquiryStatus,
        <choose>
            <when test="cantonCode!=null and cantonCode != ''">
                entBase.cantonCode REGEXP  concat('^',#{cantonCode},'%') as matchCount,
            </when>
            <otherwise>
                0 as matchCount,
            </otherwise>
        </choose>
        <!-- entBase.cantonCode REGEXP  concat('^','13') || entBase.cantonCode REGEXP  concat('^','32') as matchCount, -->
        (
        SELECT
        CASE
        WHEN currentEnt.posx IS NULL OR currentEnt.posy  IS NULL OR entBase.posx IS NULL OR entBase.posy IS NULL
        THEN #{infinity}
        ELSE fn_get_distance (currentEnt.posx ,currentEnt.posy,entBase.posx,entBase.posy)
        END
        FROM sys_enterprise_base currentEnt
        where currentEnt.entid = #{currentEntId}
        )as distance,
        uploadFile.file_id as fileId,
        <choose>

            <when test="licenceId!=null and licenceId!='' " >
                disposalWaste.disposalWasteCount,
            </when>

            <when test="currentEntType == 'DIS_FACILITATOR' " >
               1 as disposalWasteCount,
            </when>

        </choose>
        case when entFavor.id is not null then true
        else FALSE
        END AS favorited
        FROM ent_release entRelease
        INNER JOIN ent_release_detail releaseDetail	ON entRelease.id = releaseDetail.releaseId
        INNER JOIN sys_enterprise_base entBase	ON entRelease.entId = entBase.entId
        LEFT JOIN upload_file uploadFile on uploadFile.reference_id = entRelease.entId and uploadFile.file_type = 'a'
        left join ent_inquiry inquiry on   inquiry.releaseId =  entRelease.id and (inquiry.facilitatorEntId = #{currentEntId} or inquiry.entId = #{currentEntId} or inquiry.disEntId = #{currentEntId})
        LEFT JOIN sys_canton cantonCode ON  cantonCode.CantonCode  =  CONCAT( LEFT (entBase.CantonCode,4	),'00'	)
        LEFT JOIN sys_canton provinceCantonCode ON provinceCantonCode.CantonCode = CONCAT( LEFT (entBase.CantonCode,2	),'0000'	)AND provinceCantonCode.IsEndNode = '0'
        <if test="licenceId!=null and licenceId!='' ">
            LEFT JOIN (
            SELECT
            count(relDetail.id) as disposalWasteCount , relDetail.releaseId as releaseId
            FROM
            ent_release_detail relDetail
            INNER JOIN ent_waste entWaste ON relDetail.entWasteId = entWaste.id
            where EXISTS (
            select * from  operation_licence_detail licenceDetail where entWaste.wasteId = licenceDetail.waste_id  AND licenceDetail.licence_id = #{licenceId}
            )
            group by relDetail.releaseId
            ) as disposalWaste on disposalWaste.releaseId = entRelease.id
        </if>

        LEFT JOIN ent_favorite entFavor on entFavor.referenceId = entRelease.id  and entFavor.entId = #{currentEntId} and entFavor.favoriteType = 'MSGID'
        LEFT JOIN ent_bind_serve entBind on entBind.bindServiceId = entRelease.id and entBind.serviceType = 'RESOURCE_POOL' and entBind.bindUserId = #{currentUserId}
        where  entRelease.activityId is null
        <include refid="wasteEntReleaseWhereCondition"></include>
          GROUP BY  entRelease.id
        ) AS A1

        ORDER BY  matchCount desc,releaseDate desc, distance ASC
        <if test='startRowIndex!=null and rows!=null and rows!=0 '>
            LIMIT ${startRowIndex} , ${rows}
        </if>
    </select>

    <select id="countEntRelease" resultType="java.lang.Integer" parameterType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseParam">
        SELECT
        Count(DISTINCT (entRelease.id))
        FROM ent_release entRelease
        INNER JOIN ent_release_detail releaseDetail	ON entRelease.id = releaseDetail.releaseId
        INNER JOIN ent_waste entWaste	ON releaseDetail.entWasteId = entWaste.id
        INNER JOIN sys_enterprise_base entBase	ON entRelease.entId = entBase.entId
        <if test="licenceId!=null and licenceId!='' ">
            LEFT JOIN operation_licence_detail licenceDetail	ON entWaste.wasteId = licenceDetail.waste_id AND licenceDetail.licence_id = #{licenceId}
        </if>
        LEFT JOIN ent_favorite entFavor on entFavor.referenceId = entRelease.id and entFavor.entId = #{currentEntId} and entFavor.favoriteType = 'MSGID'
        LEFT JOIN ent_bind_serve entBind on entBind.bindServiceId = entRelease.id and entBind.serviceType = 'RESOURCE_POOL' and entBind.bindUserId = #{currentUserId}
        where entRelease.activityId is null
        <include refid="wasteEntReleaseWhereCondition"></include>
    </select>
    <sql id="wasteEntReleaseByEnterIdCondition">
        <if test='currentEntId != null and currentEntId!=""'>
            <choose>
                <when test=" currentEntType!=null and currentEntType != 'FACILITATOR'">
                    and entRelease.entId = #{currentEntId} and entRelease.facilitatorEntId is null
                </when>
                <otherwise>
                    and entRelease.facilitatorEntId = #{currentEntId}
                </otherwise>
            </choose>
        </if>
        <if test='activityId !=null and activityId !="" and activityId == "resourcePull".toString() '>
            and entRelease.activityId is null
        </if>
        <if test='releaseEntContactTel !=null and releaseEntContactTel !="" '>
            and ent.contactsTel  like concat('%',trim(#{releaseEntContactTel}),'%')
        </if>
        <if test='entName !=null and entName !="" '>
            and ent.entName  like concat('%',trim(#{entName}),'%')
        </if>
        <if test='dateType !=null and dateType !="" '>
            <choose>
                <when test="dateType == 'TODAY'.toString() ">
                    AND to_days(entRelease.createTime) = to_days(now())
                </when>
                <when test="dateType == 'WEEK'.toString() ">
                    AND YEARWEEK(date_format(entRelease.createTime,'%Y-%m-%d')) = YEARWEEK(now())
                </when>
                <when test="dateType == 'MONTH'.toString() ">
                    AND DATE_FORMAT( entRelease.createTime, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )
                </when>
            </choose>
        </if>
        <if test='startDateTime !=null or endDateTime !=null'>
            <choose>
                <when test="startDateTime !=null and endDateTime !=null ">
                    AND entRelease.createTime between #{startDateTime} and #{endDateTime}
                </when>
                <when test="startDateTime !=null ">
                    AND entRelease.createTime &gt;= #{startDateTime}
                </when>
                <when test="endDateTime !=null ">
                    AND entRelease.createTime &lt; #{endDateTime}
                </when>
            </choose>
        </if>
    </sql>
    <select id="listWasteEntReleaseByEnterId"
            resultType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseModel"
            parameterType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseParam">
        SELECT
        entRelease.id AS releaseId,
        entRelease.remark AS releaseRemark,
        entRelease.totalAmountDesc as totalWasteAmountDesc,
        entRelease.totalAmount as totalWasteAmount,
        entRelease.createTime AS releaseDate,
        entRelease.busiStatus as releaseStatus,
        sysUser.ChineseName as releaseOwner,
        entRelease.busiStatus as releaseStatus,
        case when entRelease.activityId is not null then
        ( select activity_name from waste_activity where id = entRelease.activityId )
        else ''
        end as activityName,
        entRelease.activityId,
        ent.entName,
        ent.entId as releaseEntId,
        <if test='currentEntId != null and currentEntId!=""'>
            (select count(1) from ent_inquiry where busiStatus = 'SUBMIT' and ( inquiryType is null or inquiryType != 'REFERENCE_PRICE') and releaseEntId = #{currentEntId} and releaseid = entRelease.id ) as pendingProcessCount,
        </if>

        <if test='currentEntId != null and currentEntId!=""'>
            <choose>
                <when test=" currentEntType!=null and currentEntType == 'FACILITATOR'">
                    ent.contactsTel as releaseEntContactTel,
                </when>
            </choose>
        </if>
        ent.contacts as releaseEntContact
        FROM ent_release entRelease left join sys_user sysUser on entRelease.createBy = sysUser.UserId
        <if test='activityId !=null and activityId !="" and activityId != "resourcePull".toString()'>
          INNER JOIN waste_activity activity ON activity.id = entRelease.activityId AND activity.id  = #{activityId}
        </if>
        left join sys_enterprise_base ent on ent.entId=entRelease.entId
        where entRelease.deleteFlag = 0
        <include refid="wasteEntReleaseByEnterIdCondition"/>
        order by  entRelease.createTime desc
        <if test='startRowIndex!=null and rows!=null and rows!=0 '>
            LIMIT ${startRowIndex} , ${rows}
        </if>
    </select>

    <select id="countWasteEntReleaseByEnterId"
            resultType="java.lang.Integer"
            parameterType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseParam">
        SELECT
        count(1)
        FROM ent_release entRelease
        <if test='activityId !=null and activityId !="" and activityId != "resourcePull".toString() '>
            INNER JOIN waste_activity activity ON activity.id = entRelease.activityId  AND activity.id  = #{activityId}
        </if>
        left join sys_enterprise_base ent on ent.entId=entRelease.entId
        where entRelease.deleteFlag = 0
        <include refid="wasteEntReleaseByEnterIdCondition"/>
    </select>
    <sql id="wasteEntReleaseByActivityIdCondition">
        <if test='activityId != null and activityId!=""'>
            and entRelease.activityId = #{activityId}
        </if>
        <if test='status != null and status!=""'>
            and entRelease.busiStatus  = #{status}
        </if>
        order by  entRelease.createTime desc
        <if test='startRowIndex!=null and rows!=null and rows!=0 '>
            LIMIT ${startRowIndex} , ${rows}
        </if>
    </sql>
    <select id="listWasteEntReleaseByActivityId"
            resultType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseModel"
            parameterType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseParam">
        SELECT
        entRelease.id AS releaseId,
        entRelease.remark AS releaseRemark,
        entRelease.totalAmountDesc as totalWasteAmountDesc,
        entRelease.totalAmount as totalWasteAmount,
        entRelease.createTime AS releaseDate,
        baseEnt.entId as releaseEntId,
        baseEnt.entName as entName,
        baseEnt.entAddress as entAddress,
        activity.id as activityId,
        activity.activity_name as activityName,
        entRelease.busiStatus as releaseStatus
        FROM ent_release entRelease
        INNER JOIN sys_enterprise_base baseEnt on entRelease.entId = baseEnt.entId
        INNER join waste_activity activity on entRelease.activityId = activity.id
        where entRelease.deleteFlag = 0
        <include refid="wasteEntReleaseByActivityIdCondition"/>
    </select>
    <select id="countWasteEntReleaseByActivityId"
            resultType="java.lang.Integer"
            parameterType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseParam">
        SELECT
        count(1)
        FROM ent_release entRelease
        INNER JOIN waste_activity activity ON activity.id = entRelease.activityId  AND activity.id  = #{activityId}
        INNER JOIN waste_activity_enterprise activeEnter on activeEnter.activity_id = activity.id
        where entRelease.deleteFlag = 0
        <include refid="wasteEntReleaseByActivityIdCondition"/>
    </select>

    <select id="countActivityStatusByActivityId"
            resultType="com.mlsc.yifeiwang.wasterealase.model.ReleaseStatusModel" >
        SELECT
        count(1) as count,
        entRelease.busiStatus as status
        FROM ent_release entRelease
        INNER JOIN sys_enterprise_base baseEnt on entRelease.entId = baseEnt.entId
        INNER join waste_activity activity on entRelease.activityId = activity.id
        where entRelease.deleteFlag = 0
        <if test='activityId != null and activityId!=""'>
            and entRelease.activityId = #{activityId}
        </if>
        group by entRelease.busiStatus

    </select>



    <resultMap id="informEnterpriseModel" type="com.mlsc.yifeiwang.wasterealase.model.InformEnterpriseModel">
        <id column="entId" property="entId" />
        <result column="entName" property="entName" />
        <result column="distance" property="distance" />
    </resultMap>

    <select id="informEnterpriseByReleaseId"
            resultType="com.mlsc.yifeiwang.wasterealase.model.InformEnterpriseModel"
            parameterType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseParam">
        SELECT
        enterbase.entId,
        enterbase.entName,
        (
        SELECT
        CASE
        WHEN currentEnt.posx IS NULL OR currentEnt.posy IS NULL OR enterbase.posx IS NULL OR enterbase.posy IS NULL THEN  format(#{infinity},2)
        ELSE
            format(fn_get_distance (currentEnt.posx,currentEnt.posy,enterbase.posx,enterbase.posy),2)
        END
        FROM
        sys_enterprise_base currentEnt
        WHERE
        currentEnt.entid = #{currentEntId}
        ) AS distance
        FROM
        sys_enterprise_base enterbase
        INNER JOIN operation_licence licence ON enterbase.entid = licence.enterprise_id  AND licence.valid = '1'  AND licence.start_date &lt;= SYSDATE() AND licence.end_date &gt;= SYSDATE()
        LEFT JOIN operation_licence_detail licDetail ON licence.id = licDetail.licence_id
        LEFT JOIN waste ON licDetail.waste_id = waste.id
        LEFT JOIN ent_waste entWaste ON waste.id = entWaste.wasteId
        LEFT JOIN ent_release_detail releaseDetail ON releaseDetail.entWasteId = entWaste.id     AND releaseDetail.releaseId =  #{releaseId}
        LEFT JOIN upload_file enterImg on enterbase.entId = enterImg.reference_id and enterImg.file_type = 'a'
        WHERE  releaseId IS NOT NULL
        <if test='cantonCode !=null  and cantonCode !="" '>
            AND enterbase.CantonCode LIKE  concat(left(#{cantonCode},2),'%')
        </if>
        GROUP BY enterbase.entId
        ORDER BY enterbase.CantonCode  REGEXP concat('^',left(#{cantonCode},2),2) DESC ,count(releaseDetail.id) DESC,distance ASC
--         LIMIT 0 , ${rows}
    </select>


    <select id="listDisFacilitatorEnt"
            resultType="com.mlsc.yifeiwang.wasterealase.model.InformEnterpriseModel"
            parameterType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseParam">
        SELECT
        enterbase.entId,
        enterbase.entName,
        (
        SELECT
        CASE
        WHEN currentEnt.posx IS NULL OR currentEnt.posy IS NULL OR enterbase.posx IS NULL OR enterbase.posy IS NULL THEN  format(#{infinity},2)
        ELSE
        format(fn_get_distance (currentEnt.posx,currentEnt.posy,enterbase.posx,enterbase.posy),2)
        END
        FROM
        sys_enterprise_base currentEnt
        WHERE
        currentEnt.entid = #{currentEntId}
        ) AS distance
        FROM
        sys_enterprise_base enterbase
        WHERE enterbase.entType = 'DIS_FACILITATOR'
        <if test='cantonCode !=null  and cantonCode !="" '>
             and enterbase.CantonCode LIKE  concat(left(#{cantonCode},2),'%')
        </if>

    </select>





    <select id="getEntReleaseById" resultType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseModel" parameterType="com.mlsc.yifeiwang.entinquiry.model.EntInquiryParam">
        SELECT
        entRelease.id AS releaseId,
        entRelease.entId AS releaseEntId,
        entBase.entName,
        entBase.entAddress,
        entRelease.totalAmountDesc AS totalWasteAmountDesc,
        entRelease.releaseCount AS totalWasteCount,
        entRelease.createTime AS releaseDate,
        entRelease.remark as releaseRemark
        FROM
        ent_release entRelease
        INNER JOIN sys_enterprise_base entBase ON entRelease.entId = entBase.entId
        <where>
            <if test='releaseId !=null  and releaseId !="" '>
                entRelease.id = #{releaseId}
            </if>
        </where>
    </select>

    <select id="listReleaseEntName" resultType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseModel" >
        SELECT
        entRelease.id AS releaseId,
        entRelease.entId AS releaseEntId,
        entBase.entName,
        entBase.entAddress,
        entRelease.totalAmountDesc AS totalWasteAmountDesc,
        entRelease.releaseCount AS totalWasteCount,
        entRelease.createTime AS releaseDate,
        entRelease.remark as releaseRemark
        FROM
        ent_release entRelease
        INNER JOIN sys_enterprise_base entBase ON entRelease.entId = entBase.entId
        <where>
            <if test='releaseId !=null  and releaseId !="" '>
                entRelease.id = #{releaseId}
            </if>
        </where>
    </select>

    <select id="getReleasePosterInfo" resultType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseModel" >
        SELECT
        count(entRelease.id) AS releaseCount,max(entRelease.createTime) as releaseDate,
        entBase.entName,sysUser.ChineseName as releaseUserName
        FROM
        ent_release entRelease
        INNER JOIN sys_enterprise_base entBase ON entRelease.entId = entBase.entId
        INNER JOIN sys_user_enterprise_relation enterRelation on enterRelation.EntId = entBase.entId
        INNER JOIN sys_user sysUser on sysUser.UserId = enterRelation.UserId
        <where>
            <if test='userId !=null  and userId !="" '>
                enterRelation.UserId = #{userId} and entRelease.facilitatorEntId is null
            </if>
        </where>
        group by entRelease.entId
    </select>
    <sql id="wasteEntRelease4FacilitatorEntCondition">
        <if test='favorited == true'>
            and entFavor.id is not null
        </if>
        <if test='inquiryStatus !=null and inquiryStatus !="" '>
            <choose>
                <when test="inquiryStatus == '1'.toString() ">
                    and inquiry.id is not null
                </when>
                <when test="inquiryStatus == '0'.toString() ">
                    and inquiry.id is null
                </when>
            </choose>
        </if>
        <if test='amountInterval != 0.0 and amountIntervalList == null'>
            and entRelease.totalAmount &gt;= #{amountInterval}
        </if>
        <if test='amountInterval == 0.0 and amountIntervalList != null'>
            and (
            <foreach collection="amountIntervalList" item="amountItem" separator="or">
                (entRelease.totalAmount BETWEEN #{amountItem.startAmount} and #{amountItem.endAmount})
            </foreach>
            )
        </if>
        <if test='amountInterval != 0.0 and amountIntervalList != null'>
            and ( entRelease.totalAmount &gt;= #{amountInterval}
            <foreach collection="amountIntervalList" item="amountItem" separator="or">
                or (entRelease.totalAmount BETWEEN #{amountItem.startAmount} and #{amountItem.endAmount})
            </foreach>
            )
        </if>
        <if test='amountInterval != 0.0 and amountIntervalList != null'>
            and ( entRelease.totalAmount &gt;= #{amountInterval}
            <foreach collection="amountIntervalList" item="amountItem" separator="or">
                or (entRelease.totalAmount BETWEEN #{amountItem.startAmount} and #{amountItem.endAmount})
            </foreach>
            )
        </if>
        <if test=' cantonCode != null'>
            and entBase.CantonCode LIKE  concat(#{cantonCode},'%')
        </if>
        <if test='wasteCodeList !=null'>
            AND exists (
            select *
            from ent_release_detail releaseDetail inner join ent_waste  entWaste on releaseDetail.entWasteId = entWaste.id where
            (
            <foreach collection="wasteCodeList" item="wasteCodeItem" separator="or">
                wasteCode LIKE  concat('%',#{wasteCodeItem})
            </foreach>
            )
            and releaseDetail.releaseId = entRelease.id
            )
        </if>
    </sql>
    <select id="listWasteEntRelease4FacilitatorEnt"
            resultType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseModel"
            parameterType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseParam">

        SELECT *
        FROM
        (
        SELECT
        entRelease.id AS releaseId,
        entBase.entId as releaseEntId,
        entBase.entName,
        entBase.entAddress,
        entRelease.remark AS releaseRemark,
        count(releaseDetail.id) AS totalWasteCount,
        entRelease.totalAmountDesc as totalWasteAmountDesc,
        entRelease.totalAmount as totalWasteAmount,
        entRelease.createTime AS releaseDate,
        entRelease.busiStatus as releaseStatus,
        entRelease.facilitatorEntId,
        (
        SELECT
        CASE
        WHEN currentEnt.posx IS NULL OR currentEnt.posy  IS NULL OR entBase.posx IS NULL OR entBase.posy IS NULL
        THEN #{infinity}
        ELSE fn_get_distance (currentEnt.posx ,currentEnt.posy,entBase.posx,entBase.posy)
        END
        FROM sys_enterprise_base currentEnt
        where currentEnt.entid = #{currentEntId}
        )as distance,
        case when inquiry.id is not null then 1 else 0 end as inquiryStatus,
        uploadFile.file_id as fileId,
        case when entFavor.id is not null then true
        else FALSE
        END AS favorited
        FROM ent_release entRelease
        INNER JOIN ent_release_detail releaseDetail	ON entRelease.id = releaseDetail.releaseId and entRelease.busiStatus &lt;&gt; 'END'
        INNER JOIN sys_enterprise_base entBase	ON entRelease.entId = entBase.entId
        LEFT JOIN upload_file uploadFile on uploadFile.reference_id = entRelease.entId and uploadFile.file_type = 'a'
        left join ent_inquiry inquiry on   inquiry.releaseId =  entRelease.id and (inquiry.facilitatorEntId = #{currentEntId} or inquiry.entId = #{currentEntId})
        left join ent_favorite entFavor on entFavor.referenceId = entRelease.id  and entFavor.entId = #{currentEntId} and entFavor.favoriteType = 'MSGID'
        where entRelease.deleteFlag = 0 and entRelease.activityId is null
        <include refid="wasteEntRelease4FacilitatorEntCondition"/>
        GROUP BY  entRelease.id
        ) AS A1

        ORDER BY  releaseDate desc, distance ASC
        <if test='startRowIndex!=null and rows!=null and rows!=0 '>
            LIMIT ${startRowIndex} , ${rows}
        </if>
    </select>

    <select id="countWasteEntRelease4FacilitatorEnt" resultType="java.lang.Integer" parameterType="com.mlsc.yifeiwang.wasterealase.model.EntReleaseParam">
        SELECT
        Count(DISTINCT (entRelease.id))
        FROM ent_release entRelease
        INNER JOIN ent_release_detail releaseDetail	ON entRelease.id = releaseDetail.releaseId and entRelease.busiStatus &lt;&gt; 'END'
        INNER JOIN ent_waste entWaste	ON releaseDetail.entWasteId = entWaste.id
        INNER JOIN sys_enterprise_base entBase	ON entRelease.entId = entBase.entId
        left join ent_inquiry inquiry on   inquiry.releaseId =  entRelease.id and (inquiry.facilitatorEntId = #{currentEntId} or inquiry.entId = #{currentEntId})
        LEFT JOIN ent_favorite entFavor on entFavor.referenceId = entRelease.id and entFavor.entId = #{currentEntId} and entFavor.favoriteType = 'MSGID'
        where entRelease.deleteFlag = 0 and entRelease.activityId is null
        <include refid="wasteEntRelease4FacilitatorEntCondition"/>
    </select>
</mapper>
