/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-08-23 02:49:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.LicenceApproved;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mlsc.waste.utils.Constant;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fstep_005fitems_005fbegin;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fstep_005fitems_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fstep_005fitems_005fbegin.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    String appPath=request.getContextPath();
    String ticketId = (String)request.getAttribute("ticketId");

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/common/top.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("许可证审核", request.getCharacterEncoding()), out, true);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/common/left.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("menuId", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("#approveLicence", request.getCharacterEncoding()), out, true);
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Main section-->\r\n");
      out.write("<section>\r\n");
      out.write("    <div class=\"el-breadcrumb\">\r\n");
      out.write("        <span class=\"el-breadcrumb__item\">\r\n");
      out.write("            <span class=\"el-breadcrumb__item__inner\">权限管理</span>\r\n");
      out.write("            <span class=\"el-breadcrumb__separator\">/</span>\r\n");
      out.write("        </span>\r\n");
      out.write("        <span class=\"el-breadcrumb__item\">\r\n");
      out.write("            <span class=\"el-breadcrumb__item__inner\">许可证审核</span>\r\n");
      out.write("            <span class=\"el-breadcrumb__separator\">/</span>\r\n");
      out.write("        </span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- Page content-->\r\n");
      out.write("    <div>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-md-12\">\r\n");
      out.write("                <div class=\"tool-div\">\r\n");
      out.write("                    <div class=\"btn-group\" role=\"group\">\r\n");
      out.write("                        <a class=\"btn btn-default\" href=\"#\" role=\"button\" id=\"view\" onclick=\"view(this)\">查看</a>\r\n");
      out.write("                        <a class=\"btn btn-default\" href=\"#\" role=\"button\" id=\"confirmPass\" onclick=\"confirmPass(this)\">审核通过</a>\r\n");
      out.write("                        <a class=\"btn btn-default\" href=\"#\" role=\"button\" id=\"confirmReject\" onclick=\"confirmReject(this)\">审核退回</a>\r\n");
      out.write("                        <a class=\"btn btn-default\" href=\"#\" role=\"button\" id=\"termination\" onclick=\"termination(this)\">终止</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"waste-panel table-responsive\">\r\n");
      out.write("                    <table id=\"example\" class=\"table table-striped table-hover table-condensed\">\r\n");
      out.write("                        <thead>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>\r\n");
      out.write("                                    <label class=\"checkbox-inline c-checkbox\">\r\n");
      out.write("                                        <input id=\"checkAll\" name=\"checkAll\" type=\"checkbox\">\r\n");
      out.write("                                        <span class=\"fa fa-check\"></span>\r\n");
      out.write("                                    </label>\r\n");
      out.write("                                </th>\r\n");
      out.write("                                <th>企业名称</th>\r\n");
      out.write("                                <th>许可证编号</th>\r\n");
      out.write("                                <th>核准经营方式</th>\r\n");
      out.write("                                <th>审批状态</th>\r\n");
      out.write("                                <th>发证机关</th>\r\n");
      out.write("                                <th>有效期</th>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody></tbody>\r\n");
      out.write("                        <tfoot class='filter'>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th></th>\r\n");
      out.write("                                <th>企业名称</th>\r\n");
      out.write("                                <th>许可证编号</th>\r\n");
      out.write("                                <th>核准经营方式</th>\r\n");
      out.write("                                <th>审批状态</th>\r\n");
      out.write("                                <th></th>\r\n");
      out.write("                                <th></th>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </tfoot>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</section>\r\n");
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/common/bottom.jsp", out, true);
      out.write("\r\n");
      out.write("<script src=\"");
      out.print(appPath );
      out.write("/thirdparty/parsleyjs/dist/parsley.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- notify-->\r\n");
      out.write("<script src=\"");
      out.print(appPath );
      out.write("/main/common/main.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var table ;\r\n");
      out.write("var searchTimeOut;//timeout对象\r\n");
      out.write("var idx;//过虑的列序号\r\n");
      out.write("var val;//过虑值\r\n");
      out.write("function search2() {\r\n");
      out.write("    table.column( idx ).search( val ).draw();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(document).ready( function () {\r\n");
      out.write("    $('#example tfoot th').each( function () {\r\n");
      out.write("        if($(this).index() == 3){\r\n");
      out.write("            var select = $('<select class=\"form-control input-sm datatable_input_col_search\"><option value=\"\"></option></select>').appendTo( $(this).empty() );\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        }else if($(this).index() == 4){\r\n");
      out.write("            var select = $('<select class=\"form-control input-sm datatable_input_col_search\"></select>').appendTo( $(this).empty() );\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        }else{\r\n");
      out.write("            var title = $('#example tfoot th').eq( $(this).index() ).text();\r\n");
      out.write("            if(title!=''){\r\n");
      out.write("                $(this).html( '<input type=\"text\" placeholder=\"搜索 '+title+'\" class=\"form-control input-sm datatable_input_col_search\"/>' );\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("   // DataTable\r\n");
      out.write("    table = $('#example').DataTable({\r\n");
      out.write("        \"processing\": true,\r\n");
      out.write("        \"serverSide\": true,\r\n");
      out.write("        \"ajax\": $.fn.dataTable.pipeline( {\r\n");
      out.write("            url: 'listForJson.htm?ticketId=");
      out.print(ticketId );
      out.write("',\r\n");
      out.write("            pages: 2 // number of pages to cache\r\n");
      out.write("        } ),\r\n");
      out.write("        \"columns\": [\r\n");
      out.write("                    { \"data\": \"id\" },\r\n");
      out.write("                    { \"data\": \"enterpriseName\" },\r\n");
      out.write("                    { \"data\": \"licence_no\" },\r\n");
      out.write("                    { \"data\": \"operationMode\" },\r\n");
      out.write("                    { \"data\": \"auditStatus\" },\r\n");
      out.write("                    { \"data\": \"licence_org\" },\r\n");
      out.write("                    { \"data\": \"validityPeriod\" }\r\n");
      out.write("                ],\r\n");
      out.write("        \"columnDefs\": [\r\n");
      out.write("               {\r\n");
      out.write("                    \"render\": function(data, type, row) {\r\n");
      out.write("                        return '<label class=\"checkbox-inline c-checkbox\"><input type=\"checkbox\" class=\"checkCalling\" name=\"id\" value=\"'+ data +'\">'\r\n");
      out.write("                              +'<span class=\"fa fa-check\"></span></label>';\r\n");
      out.write("                    },\r\n");
      out.write("                    \"orderable\": false,\r\n");
      out.write("                    \"targets\": 0\r\n");
      out.write("        }],\r\n");
      out.write("        \"ordering\": false,\r\n");
      out.write("        \"pagingType\": \"simple\",\r\n");
      out.write("        \"language\": language,\r\n");
      out.write("        \"dom\": 'rt<\"bottom\"lip >'\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // Apply the search\r\n");
      out.write("    table.columns().eq( 0 ).each( function ( colIdx ) {\r\n");
      out.write("        $( 'input,select', table.column( colIdx ).footer() ).on( 'keyup change propertychange input', function () {\r\n");
      out.write("                clearTimeout(searchTimeOut);\r\n");
      out.write("                idx = colIdx;\r\n");
      out.write("                val = this.value;\r\n");
      out.write("                searchTimeOut = setTimeout(\"search2()\", 1000);\r\n");
      out.write("        } );\r\n");
      out.write("    } );\r\n");
      out.write("    \r\n");
      out.write("    function initTableCheckbox(){\r\n");
      out.write("        /*“全选/反选”复选框*/  \r\n");
      out.write("        var $checkAll = $('#checkAll');\r\n");
      out.write("        $checkAll.click(function(event){  \r\n");
      out.write("            /*将所有行的选中状态设成全选框的选中状态*/  \r\n");
      out.write("            $('.checkCalling').prop('checked',$(this).prop('checked')); \r\n");
      out.write("        });  \r\n");
      out.write("\r\n");
      out.write("        /*点击每一行的选中复选框时*/  \r\n");
      out.write("        $('.checkCalling').click(function(event){\r\n");
      out.write("            $checkAll.prop('checked',$('table tbody tr').find('input:checked').length == $('.checkCalling').length ? true : false);\r\n");
      out.write("        \r\n");
      out.write("        }); \r\n");
      out.write("    }  \r\n");
      out.write("    initTableCheckbox();  \r\n");
      out.write("} );\r\n");
      out.write("\r\n");
      out.write("//查看经营许可证\r\n");
      out.write("function view(that){\r\n");
      out.write("    var $checkItem = $(\"input[name='id']:checked\");\r\n");
      out.write("    if ($checkItem.length != 1) {\r\n");
      out.write("        $.notify(\"请选择一个进行查看许可证详细信息\",{\"status\":\"");
      out.print(Constant.STATUS_INFO);
      out.write("\"});\r\n");
      out.write("    } else {\r\n");
      out.write("        var paramObj = {};\r\n");
      out.write("        paramObj.id = $checkItem.val();\r\n");
      out.write("        var pageUrl = \"/licenceApproved/view.htm\";\r\n");
      out.write("        $.page.gotoTargetLocation(pageUrl, paramObj);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//审核通过经营许可证\r\n");
      out.write("function confirmPass(t){\r\n");
      out.write("    var $checkItem = $(\"input[name='id']:checked\");\r\n");
      out.write("    if($checkItem.length == 0){\r\n");
      out.write("        $.notify(\"请选择一条或多条进行审核\", {\"status\": \"info\"});\r\n");
      out.write("    }else{\r\n");
      out.write("    \tif($checkItem.parent().parent().parent().find('td').eq(4).html()=== '待审核'){\r\n");
      out.write("\t        swal({  title: \"确认通过\",   \r\n");
      out.write("\t            text: \"请确认是否通过\",   \r\n");
      out.write("\t            type: \"warning\",   \r\n");
      out.write("\t            showCancelButton: true,   \r\n");
      out.write("\t            confirmButtonColor: \"#DD6B55\",   \r\n");
      out.write("\t            confirmButtonText: \"确认\",   \r\n");
      out.write("\t            cancelButtonText: \"取消\",   \r\n");
      out.write("\t            closeOnConfirm: false,   \r\n");
      out.write("\t            closeOnCancel: true \r\n");
      out.write("\t        }, \r\n");
      out.write("\t        function(isConfirm){  \r\n");
      out.write("\t            if(isConfirm){\r\n");
      out.write("                    swal( \"审核通过\",\"\", \"success\");\r\n");
      out.write("\t                $.page.ajax($.page.getAjaxSettings({\r\n");
      out.write("\t                    async: false,\r\n");
      out.write("\t                    type: \"POST\",\r\n");
      out.write("\t                    dataType: \"json\",\r\n");
      out.write("\t                    url: \"/licenceApproved/confirmPass.htm\",\r\n");
      out.write("\t                    data: $checkItem.serialize(),\r\n");
      out.write("\t                    success: function (result, textStatus, jqXHR) {\r\n");
      out.write("                            swal( \"审核通过\",\"\", \"success\");\r\n");
      out.write("\t                        table.column( 0 ).search(Math.random()).draw();\r\n");
      out.write("\t                    }\r\n");
      out.write("\t                }));\r\n");
      out.write("\t            }  \r\n");
      out.write("\t        });\r\n");
      out.write("\t    }else{\r\n");
      out.write("\t    \t$.notify(\"只有[待审核]的许可证可以审核通过\",{\"status\":\"info\"});\r\n");
      out.write("\t    }\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//审核退回经营许可证\r\n");
      out.write("function confirmReject(t){\r\n");
      out.write("    var $checkItem = $(\"input[name='id']:checked\");\r\n");
      out.write("    if($checkItem.length == 0){\r\n");
      out.write("        $.notify(\"请选择一条或多条进行审核\", {\"status\": \"info\"});\r\n");
      out.write("    }else{\r\n");
      out.write("    \tif($checkItem.parent().parent().parent().find('td').eq(4).html()=== '待审核'){\r\n");
      out.write("    \t\tswal({  title: \"确认退回\",   \r\n");
      out.write("                text: \"请确认是否退回\",   \r\n");
      out.write("                type: \"warning\",   \r\n");
      out.write("                showCancelButton: true,   \r\n");
      out.write("                confirmButtonColor: \"#DD6B55\",   \r\n");
      out.write("                confirmButtonText: \"确认\",   \r\n");
      out.write("                cancelButtonText: \"取消\",   \r\n");
      out.write("                closeOnConfirm: false,   \r\n");
      out.write("                closeOnCancel: true \r\n");
      out.write("            }, \r\n");
      out.write("            function(isConfirm){  \r\n");
      out.write("                if(isConfirm){\r\n");
      out.write("               \t\t$.page.ajax($.page.getAjaxSettings({\r\n");
      out.write("                           async: false,\r\n");
      out.write("                           type: \"POST\",\r\n");
      out.write("                           dataType: \"json\",\r\n");
      out.write("                           url: \"/licenceApproved/confirmReject.htm\",\r\n");
      out.write("                           data: $checkItem.serialize(),\r\n");
      out.write("                           success: function (result, textStatus, jqXHR) {\r\n");
      out.write("                               swal({  \r\n");
      out.write("                                   title: \"审核退回成功\",   \r\n");
      out.write("                                   type: \"success\",   \r\n");
      out.write("                                   confirmButtonColor: \"#3399FF\",   \r\n");
      out.write("                                   confirmButtonText: \"确定\",   \r\n");
      out.write("                                   closeOnConfirm: false,   \r\n");
      out.write("                                   closeOnCancel: false \r\n");
      out.write("                               });\r\n");
      out.write("                               table.column( 0 ).search(Math.random()).draw();\r\n");
      out.write("                           }\r\n");
      out.write("                       }));\r\n");
      out.write("                \t\r\n");
      out.write("                }  \r\n");
      out.write("            });\r\n");
      out.write("    \t}else{\r\n");
      out.write("   \t\t $.notify(\"只有[待审核]的许可证可以审核退回\",{\"status\":\"info\"});\r\n");
      out.write("    \t}\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("function termination(t){\r\n");
      out.write("\t var $checkItem = $(\"input[name='id']:checked\");\r\n");
      out.write("    if($checkItem.length == 0){\r\n");
      out.write("        $.notify(\"请选择一条或多条进行终止\", {\"status\": \"info\"});\r\n");
      out.write("    }else{\r\n");
      out.write("    \tif($checkItem.parent().parent().parent().find('td').eq(4).html()=== '审核通过'){\r\n");
      out.write("    \t\tswal({  title: \"确认终止\",   \r\n");
      out.write("                text: \"请确认是否终止\",   \r\n");
      out.write("                type: \"warning\",   \r\n");
      out.write("                showCancelButton: true,   \r\n");
      out.write("                confirmButtonColor: \"#DD6B55\",   \r\n");
      out.write("                confirmButtonText: \"确认\",   \r\n");
      out.write("                cancelButtonText: \"取消\",   \r\n");
      out.write("                closeOnConfirm: false,   \r\n");
      out.write("                closeOnCancel: true \r\n");
      out.write("            }, \r\n");
      out.write("            function(isConfirm){  \r\n");
      out.write("                if(isConfirm){\r\n");
      out.write("               \t\t$.page.ajax($.page.getAjaxSettings({\r\n");
      out.write("                           async: false,\r\n");
      out.write("                           type: \"POST\",\r\n");
      out.write("                           dataType: \"json\",\r\n");
      out.write("                           url: \"/licenceApproved/termination.htm\",\r\n");
      out.write("                           data: $checkItem.serialize(),\r\n");
      out.write("                           success: function (result, textStatus, jqXHR) {\r\n");
      out.write("                               swal({  \r\n");
      out.write("                                   title: \"终止成功\",   \r\n");
      out.write("                                   type: \"success\",   \r\n");
      out.write("                                   confirmButtonColor: \"#3399FF\",   \r\n");
      out.write("                                   confirmButtonText: \"确定\",   \r\n");
      out.write("                                   closeOnConfirm: false,   \r\n");
      out.write("                                   closeOnCancel: false \r\n");
      out.write("                               });\r\n");
      out.write("                               table.column( 0 ).search(Math.random()).draw();\r\n");
      out.write("                           }\r\n");
      out.write("                       }));\r\n");
      out.write("                \t\r\n");
      out.write("                }  \r\n");
      out.write("            });\r\n");
      out.write("    \t}else{\r\n");
      out.write("   \t\t $.notify(\"只有[审核通过]的许可证可以终止\",{\"status\":\"info\"});\r\n");
      out.write("    \t}\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/jsp/LicenceApproved/list.jsp(98,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("it");
    // /WEB-INF/jsp/LicenceApproved/list.jsp(98,12) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/LicenceApproved/list.jsp(98,12) '${operationModeList}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${operationModeList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /WEB-INF/jsp/LicenceApproved/list.jsp(98,12) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVarStatus("status");
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                select.append('<option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${it.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('"');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${it.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("</option>');\r\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fstep_005fitems_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f1.setParent(null);
    // /WEB-INF/jsp/LicenceApproved/list.jsp(103,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setVar("it");
    // /WEB-INF/jsp/LicenceApproved/list.jsp(103,12) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/LicenceApproved/list.jsp(103,12) '${auditStatusList}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${auditStatusList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /WEB-INF/jsp/LicenceApproved/list.jsp(103,12) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setVarStatus("status");
    // /WEB-INF/jsp/LicenceApproved/list.jsp(103,12) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setBegin(0);
    // /WEB-INF/jsp/LicenceApproved/list.jsp(103,12) name = step type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setStep(1);
    int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
      if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                ");
          if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\r\n");
          out.write("                ");
          if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\r\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f1.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fstep_005fitems_005fbegin.reuse(_jspx_th_c_005fforEach_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
    // /WEB-INF/jsp/LicenceApproved/list.jsp(104,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${it.code eq 'SUBMIT'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                    select.append('<option selected=\"selected\" value=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${it.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write('"');
        out.write('>');
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${it.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write("</option>');\r\n");
        out.write("                ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
    // /WEB-INF/jsp/LicenceApproved/list.jsp(107,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${it.code ne 'SUBMIT'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                    select.append('<option value=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${it.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write('"');
        out.write('>');
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${it.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write("</option>');\r\n");
        out.write("                ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }
}
